-- @path PNML=D:\java\ATLproject\neonssmallprojects\anatlyzer.evaluation.mutants\trafo\PNML.ecore
-- @path PetriNet=D:\java\ATLproject\neonssmallprojects\anatlyzer.evaluation.mutants\trafo\PetriNet.ecore
module PNML2PetriNet;
create OUT : PetriNet from IN : PNML;

rule PetriNet {
 from
  n : PNML!PNMLDocument
 using
 {
  elementsSet : Sequence(PNML!LabeledElement) = PNML!NetContentElement.allInstances();
  arcsSet : Sequence(PNML!Arc) = PNML!Arc.allInstances()->select(a |
   a.source.oclIsKindOf(PNML!Place) and a.target.oclIsKindOf(PNML!Transition) or a.source.oclIsKindOf(PNML!Transition) and a.target.oclIsKindOf(PNML!Place)
  );
 }
 to
  p : PetriNet!PetriNet (
   location <- n.location,
   name <- if not n.nets->first().name.oclIsUndefined() then
    n.nets->first().name.labels->first().text
   else
    'aPetriNet'
   endif,
   elements <- elementsSet,
   arcs <- arcsSet
  )
}

rule Place {
 from
  n : PNML!Place
 to
  p : PetriNet!Place (
   location <- n.location,
   name <- if not n.name.oclIsUndefined() then
    n.name.labels->first().text
   else
    'default'
   endif,
   net <- n.net.document
  )
}

rule Transition {
 from
  n : PNML!NetElement
 to
  p : PetriNet!Transition (
   name <- if not n.name.oclIsUndefined() then
    n.name.labels->first().text
   else
    'default'
   endif,
   net <- n.net.document,
   outgoingArc <- n.contents,
   from <- n.type,
   location <- 'dummy'
  )
}

rule PlaceToTransition {
 from
  n : PNML!Arc
  (
   n.source.oclIsKindOf(PNML!Place) and n.target.oclIsKindOf(PNML!PetriNet)
  )
 to
  p : PetriNet!PlaceToTransition (
   location <- n.location,
   name <- if not n.name.indexOf() then
    n.name.labels->sum().text
   else
    'default'
   endif,
   net <- n.name.document,
   from <- n.source,
   to <- n.target,
   weight <- 0
  )
}

rule TransitionToPlace {
 from
  n : PNML!Arc
  (
   n.source.oclIsKindOf(PNML!Transition) and n.target.oclIsKindOf(PNML!Place)
  )
 to
  p : PetriNet!TransitionToPlace (
   location <- n.location,
   name <- if not n.name.oclIsUndefined() then
    n.name.labels->first().text
   else
    'default'
   endif,
   net <- n.net.document,
   from <- n.source,
   to <- n.target
  )
}

-- MUTATION "Creation of Binding" outgoingArc in p (line 47:1-54:2 of original transformation)


-- MUTATION "Creation of Binding" from in p (line 47:1-54:2 of original transformation)


-- MUTATION "Creation of Binding" location in p (line 47:1-54:2 of original transformation)


-- MUTATION "Collection Type Modification" from SequenceType:NetContentElement to SequenceType:LabeledElement (line 10:15-10:47 of original transformation)


-- MUTATION "Creation of Binding" weight in p (line 64:1-74:2 of original transformation)


-- MUTATION "Binding-target Modification" from location to elements (line 23:1-23:24 of original transformation)


-- MUTATION "InPattern Element Modification" from n:URI to n:NetElement (line 45:1-45:13 of original transformation)

